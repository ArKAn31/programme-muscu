import streamlit as st
import pandas as pd

# Titre
st.markdown("# ðŸ’ª Ton Programme Muscu StylÃ©")

# Lecture CSV
df = pd.read_csv("programme.csv")

# SÃ©lection du jour et du superset
jours = sorted(df["Jour"].unique())
jour_select = st.selectbox("ðŸ“… SÃ©lectionne ton jour :", jours)

blocs = sorted(df[df["Jour"] == jour_select]["Bloc"].unique())
bloc_select = st.selectbox("ðŸŽ¯ Choisis ton Superset :", blocs)

# Filtrage des donnÃ©es
bloc_data = df[(df["Jour"] == jour_select) & (df["Bloc"] == bloc_select)]
exercice = bloc_data["Exercice"].iloc[0]
st.markdown(f"### ðŸ’¥ *Exercice* : **_{exercice}_**")

# ðŸ”„ RÃ©initialisation
if st.button("ðŸ”„ RÃ©initialiser ce bloc"):
    for _, row in bloc_data.iterrows():
        key = f"{jour_select}_{bloc_select}_{row['Series_Reps']}"
        if key in st.session_state:
            del st.session_state[key]
    # ðŸ‘‰ force un refresh propre avec une clÃ© de version
    st.experimental_set_query_params(reset="1")
    st.rerun()

# âœ… Affichage des checkboxes
all_checked = True
for _, row in bloc_data.iterrows():
    key = f"{jour_select}_{bloc_select}_{row['Series_Reps']}"
    if key not in st.session_state:
        st.session_state[key] = False
    checked = st.checkbox(f"ðŸ”¥ {row['Series_Reps']}", key=key)
    if not checked:
        all_checked = False

# âœ… Validation
if all_checked:
    st.success("âœ… Superset validÃ©, bien jouÃ© champion !")





